shiny::runApp()
runApp()
runApp()
# Read and preprocess the data
tweets <- read.csv("data/tweets_data_v2.csv")
View(tweets)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
split_text_into_lines <- function(text, max_length) {
words <- strsplit(text, " ")[[1]]
lines <- c()
current_line <- ""
for (word in words) {
if (nchar(current_line) + nchar(word) <= max_length) {
current_line <- paste0(current_line, " ", word)
} else {
lines <- c(lines, trimws(current_line))
current_line <- word
}
}
lines <- c(lines, trimws(current_line))
return(paste(lines, collapse = "<br>"))
}
a = c("hejefef yehjejh whjdhehjw ehfehfe", "hshdvdhfv jhhjvdfh hjewhjehv hjvefvhh")
split_text_into_lines(a, 10)
?mapply
formatted_texts <- sapply(a, split_text_into_lines, max_length = 10)
formatted_texts
formatted_texts[1]
formatted_texts[2]
sapply(a, split_text_into_lines, max_length = 5)
sapply(a, split_text_into_lines, max_length = 90)
a
long_texts <- c(
"This is a very long sentence that needs to be broken into multiple lines for better readability.",
"Another long sentence with additional details that should appear on a new line."
)
long_texts
sapply(long_texts, split_text_into_lines, max_length = 90)
sapply(long_texts, split_text_into_lines, max_length = 5)
split_text_into_lines <- function(text, max_length) {
words <- strsplit(text, " ")[[1]]
lines <- c()
current_line <- ""
for (word in words) {
if (nchar(current_line) + nchar(word) + 1 <= max_length) { # +1 for space
current_line <- paste0(current_line, if (nchar(current_line) > 0) " ", word)
} else {
lines <- c(lines, current_line)
current_line <- word
}
}
lines <- c(lines, current_line) # Add the last line
return(paste(lines, collapse = "<br>"))
}
sapply(long_texts, split_text_into_lines, max_length = 5)
sapply(long_texts, split_text_into_lines, max_length = 15)
split_text_into_lines <- function(text, max_length) {
words <- unlist(strsplit(text, " "))
lines <- c()
current_line <- ""
for (word in words) {
if (nchar(current_line) + nchar(word) + 1 <= max_length) {
current_line <- paste0(current_line, ifelse(nchar(current_line) > 0, " ", ""), word)
} else {
lines <- c(lines, current_line)
current_line <- word
}
}
lines <- c(lines, current_line) # Add the last line
return(paste(lines, collapse = "<br>"))
}
sapply(long_texts, split_text_into_lines, max_length = 5)
text = long_texts
words <- unlist(strsplit(text, " "))
words
lines <- c()
current_line <- ""
for (word in words) {
if (nchar(current_line) + nchar(word) + 1 <= max_length) {
current_line <- paste0(current_line, ifelse(nchar(current_line) > 0, " ", ""), word)
} else {
lines <- c(lines, current_line)
current_line <- word
}
}
max_length = 40
for (word in words) {
if (nchar(current_line) + nchar(word) + 1 <= max_length) {
current_line <- paste0(current_line, ifelse(nchar(current_line) > 0, " ", ""), word)
} else {
lines <- c(lines, current_line)
current_line <- word
}
}
current_line
lines
lines <- c(lines, current_line) # Add the last line
- c(lines, current_line) # Add the last line
paste(lines, collapse = "<br>")
sapply(long_texts, split_text_into_lines, max_length = 5)
?sapply
lapply(long_texts, split_text_into_lines, max_length = 5)
lapply(long_texts, split_text_into_lines, max_length = 50)
ss = sapply(long_texts, split_text_into_lines, max_length = 5)
ss[1]
ss[[1]]
ss = sapply(long_texts, split_text_into_lines, max_length = 5)[[1]]
ss
ss = sapply(long_texts, split_text_into_lines, max_length = 5)
ss
unlist(ss)
ss = sapply(long_texts, split_text_into_lines, max_length = 5, USE.NAMES = F)
ss
ss = sapply(long_texts, split_text_into_lines, max_length = 50, USE.NAMES = F)
ss
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabPanel
runApp()
runApp()
runApp()
